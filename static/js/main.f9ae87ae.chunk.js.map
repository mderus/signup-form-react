{"version":3,"sources":["components/useForm.js","components/validateInfo.js","components/FormSignup.js","components/FormSignin.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","callback","validate","useState","username","email","password","password2","values","setValues","errors","setErrors","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","split","test","length","FormSignup","submitForm","className","onSubmit","htmlFor","type","onChange","to","FormSignin","Form","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAiCeA,EA/BC,SAACC,EAAUC,GAAc,IAAD,EACVC,mBAAS,CACnCC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,UAAW,KALyB,mBAC/BC,EAD+B,KACvBC,EADuB,OAOVN,mBAAS,IAPC,mBAO/BO,EAP+B,KAOvBC,EAPuB,KA4BtC,MAAO,CAACC,aAlBa,SAACC,GAAO,IAAD,EACJA,EAAEC,OAAjBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACbP,EAAU,2BAAID,GAAL,kBAAcO,EAAOC,MAgBVR,SAAQS,aAbT,SAACJ,GACpBA,EAAEK,iBAEFP,EAAUT,EAASM,KAUuBE,WC9B/B,SAASS,EAAaX,GACnC,IAAIE,EAAS,GA6Bb,OA3BKF,EAAOJ,SAASgB,OAGlBZ,EAAOJ,SAASiB,MAAM,MACtB,yBAAyBC,KAAKd,EAAOJ,YAEtCM,EAAON,SAAW,qBALlBM,EAAON,SAAW,wBAQfI,EAAOH,MAEA,2CAA2CiB,KAAKd,EAAOH,SACjEK,EAAOL,MAAQ,yBAFfK,EAAOL,MAAQ,iBAKZG,EAAOF,SAEDE,EAAOF,SAASiB,OAAS,IAClCb,EAAOJ,SAAW,yBAFlBI,EAAOJ,SAAW,uBAKfE,EAAOD,UAEDC,EAAOD,YAAcC,EAAOF,WACrCI,EAAOH,UAAY,0BAFnBG,EAAOH,UAAY,+BAKdG,E,WCoCMc,EA7DI,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACkBzB,EACnDyB,EACAvB,GAFKU,EAD4B,EAC5BA,aAAcJ,EADc,EACdA,OAAQS,EADM,EACNA,aAAcP,EADR,EACQA,OAK3C,OACE,sBAAKgB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,uBAAMC,SAAUV,EAAhB,UACE,sBAAKS,UAAU,cAAf,UACE,uBAAOE,QAAQ,QAAf,4BACA,uBACEb,KAAK,QACLc,KAAK,QACLb,MAAOR,EAAOH,MACdyB,SAAUlB,IAEXF,EAAOL,OAAS,4BAAIK,EAAOL,WAE9B,sBAAKqB,UAAU,cAAf,UACE,uBAAOE,QAAQ,WAAf,uBACA,uBACEC,KAAK,OACLd,KAAK,WACLC,MAAOR,EAAOJ,SACd0B,SAAUlB,IAEXF,EAAON,UAAY,4BAAIM,EAAON,cAEjC,sBAAKsB,UAAU,cAAf,UACE,uBAAOE,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLd,KAAK,WACLC,MAAOR,EAAOF,SACdwB,SAAUlB,IAEXF,EAAOJ,UAAY,4BAAII,EAAOJ,cAEjC,sBAAKoB,UAAU,cAAf,UACE,uBAAOE,QAAQ,WAAf,mCACA,uBACEC,KAAK,WACLd,KAAK,YACLC,MAAOR,EAAOD,UACduB,SAAUlB,IAEXF,EAAOH,WAAa,4BAAIG,EAAOH,eAElC,wBAAQmB,UAAU,GAAGG,KAAK,SAA1B,yBAIF,wDACyB,cAAC,IAAD,CAAME,GAAG,IAAT,2CCfhBC,EAxCI,SAAC,GAAkB,IAAjBP,EAAgB,EAAhBA,WAAgB,EACkBzB,EACnDyB,EACAvB,GAFKU,EAD4B,EAC5BA,aAAcJ,EADc,EACdA,OAAQS,EADM,EACNA,aAAcP,EADR,EACQA,OAK3C,OACE,sBAAKgB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,uBAAMC,SAAUV,EAAhB,UACE,sBAAKS,UAAU,cAAf,UACE,uBAAOE,QAAQ,QAAf,4BACA,uBACEb,KAAK,QACLc,KAAK,QACLb,MAAOR,EAAOH,MACdyB,SAAUlB,IAEXF,EAAOL,OAAS,4BAAIK,EAAOL,WAE9B,sBAAKqB,UAAU,cAAf,UACE,uBAAOE,QAAQ,WAAf,sBACA,uBACEC,KAAK,WACLd,KAAK,WACLC,MAAOR,EAAOF,SACdwB,SAAUlB,IAEXF,EAAOJ,UAAY,4BAAII,EAAOJ,cAEjC,wBAAQuB,KAAK,SAAb,yBAEF,oDACsB,IACpB,cAAC,IAAD,CAAME,GAAG,UAAT,qDClBOE,EAhBF,WACX,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,YCPKC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f9ae87ae.chunk.js","sourcesContent":["import {useState} from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  // const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const {name, value} = e.target;\r\n    setValues({...values, [name]: value});\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    // setIsSubmitting(true);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   if (Object.keys(errors).length === 0 && isSubmitting) {\r\n  //     callback();\r\n  //   }\r\n  // });\r\n\r\n  return {handleChange, values, handleSubmit, errors};\r\n};\r\n\r\nexport default useForm;\r\n","export default function validateInfo(values) {\r\n  let errors = {};\r\n\r\n  if (!values.username.trim()) {\r\n    errors.username = \"Full name is required\";\r\n  } else if (\r\n    !values.username.split(\" \") ||\r\n    !/[a-zA-Z]+\\s+[a-zA-Z]+/g.test(values.username)\r\n  ) {\r\n    errors.username = \"Missing last name\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Email required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"Password is required\";\r\n  } else if (values.password.length < 8) {\r\n    errors.password = \"Password is too short\";\r\n  }\r\n\r\n  if (!values.password2) {\r\n    errors.password2 = \"Please confirm your password\";\r\n  } else if (values.password2 !== values.password) {\r\n    errors.password2 = \"Passwords do not match\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validateInfo\";\r\n\r\nconst FormSignup = ({submitForm}) => {\r\n  const {handleChange, values, handleSubmit, errors} = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Sign up</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\">E-mail address</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"username\">Full name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"username\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.username && <p>{errors.username}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\">Confirm your password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <button className=\"\" type=\"submit\">\r\n          Continue\r\n        </button>\r\n      </form>\r\n      <p>\r\n        Already using our app? <Link to=\"/\"> Click here to sign in</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignup;\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validateInfo\";\r\n\r\nconst FormSignin = ({submitForm}) => {\r\n  const {handleChange, values, handleSubmit, errors} = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Sign in</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\">E-mail address</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <button type=\"submit\">Continue</button>\r\n      </form>\r\n      <p>\r\n        Not our member yet?{\" \"}\r\n        <Link to=\"/signup\">Click here to create new account</Link>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignin;\r\n","import React from \"react\";\r\nimport {Route, BrowserRouter as Router, Switch} from \"react-router-dom\";\r\nimport FormSignup from \"./FormSignup\";\r\nimport FormSignin from \"./FormSignin\";\r\n\r\nconst Form = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <FormSignin />\r\n        </Route>\r\n\r\n        <Route path=\"/signup\">\r\n          <FormSignup />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import \"./App.css\";\nimport Form from \"./components/Form\";\n\nfunction App() {\n  return <Form />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}